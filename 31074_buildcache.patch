From 30544c8cbc18266d4d343dcf4f32278d1613ac15 Mon Sep 17 00:00:00 2001
From: Ivan Razumov <iarspider@gmail.com>
Date: Thu, 9 Jun 2022 13:23:49 +0200
Subject: [PATCH 1/3] Add filename to text_to_relocate only if it needs to be
 relocated

---
 lib/spack/spack/binary_distribution.py | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/lib/spack/spack/binary_distribution.py b/lib/spack/spack/binary_distribution.py
index a0b0e75b8308..0fd71e38b96e 100644
--- a/lib/spack/spack/binary_distribution.py
+++ b/lib/spack/spack/binary_distribution.py
@@ -628,6 +628,8 @@ def get_buildfile_manifest(spec):
 
     blacklist = (".spack", "man")
 
+    prefixes = [d.prefix for d in spec.traverse(root=True, deptype='all')]
+
     # Do this at during tarball creation to save time when tarball unpacked.
     # Used by make_package_relative to determine binaries to change.
     for root, dirs, files in os.walk(spec.prefix, topdown=True):
@@ -667,8 +669,17 @@ def get_buildfile_manifest(spec):
                     added = True
 
             if relocate.needs_text_relocation(m_type, m_subtype):
-                data['text_to_relocate'].append(rel_path_name)
-                added = True
+                try:
+                    contents = open(filename, 'r', errors='ignore').read()
+                except IOError as e:
+                    tty.warn("Could not check if {0} needs to be relocated: {1}".format(
+                        filename, str(e)))
+                    continue
+                for prefix in prefixes:
+                    if prefix in contents:
+                        data['text_to_relocate'].append(rel_path_name)
+                        added = True
+                        break
 
             if not added:
                 data['other'].append(path_name)

From 8f2dc927e3bbe5025efed6ada94bc01b9390155a Mon Sep 17 00:00:00 2001
From: Ivan Razumov <iarspider@gmail.com>
Date: Thu, 9 Jun 2022 13:32:04 +0200
Subject: [PATCH 2/3] Fix py2 compatibility

---
 lib/spack/spack/binary_distribution.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/spack/spack/binary_distribution.py b/lib/spack/spack/binary_distribution.py
index 0fd71e38b96e..221b856dc5e3 100644
--- a/lib/spack/spack/binary_distribution.py
+++ b/lib/spack/spack/binary_distribution.py
@@ -670,7 +670,7 @@ def get_buildfile_manifest(spec):
 
             if relocate.needs_text_relocation(m_type, m_subtype):
                 try:
-                    contents = open(filename, 'r', errors='ignore').read()
+                    contents = codecs.open(filename, 'r', errors='ignore').read()
                 except IOError as e:
                     tty.warn("Could not check if {0} needs to be relocated: {1}".format(
                         filename, str(e)))

From c601b5e2fd945f8a8682d7c4588f18549aed75d2 Mon Sep 17 00:00:00 2001
From: Ivan Razumov <iarspider@gmail.com>
Date: Thu, 9 Jun 2022 15:35:44 +0200
Subject: [PATCH 3/3] Use path_name, not filename

---
 lib/spack/spack/binary_distribution.py | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/lib/spack/spack/binary_distribution.py b/lib/spack/spack/binary_distribution.py
index 221b856dc5e3..47926f253ef7 100644
--- a/lib/spack/spack/binary_distribution.py
+++ b/lib/spack/spack/binary_distribution.py
@@ -628,7 +628,8 @@ def get_buildfile_manifest(spec):
 
     blacklist = (".spack", "man")
 
-    prefixes = [d.prefix for d in spec.traverse(root=True, deptype='all')]
+    prefixes = [d.prefix for d in spec.traverse(root=False, deptype='all')]
+    prefixes.append(spec.prefix)
 
     # Do this at during tarball creation to save time when tarball unpacked.
     # Used by make_package_relative to determine binaries to change.
@@ -670,7 +671,7 @@ def get_buildfile_manifest(spec):
 
             if relocate.needs_text_relocation(m_type, m_subtype):
                 try:
-                    contents = codecs.open(filename, 'r', errors='ignore').read()
+                    contents = codecs.open(path_name, 'r', errors='ignore').read()
                 except IOError as e:
                     tty.warn("Could not check if {0} needs to be relocated: {1}".format(
                         filename, str(e)))
